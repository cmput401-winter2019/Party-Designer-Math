'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _game_state = require('./game_state');

var _game_state2 = _interopRequireDefault(_game_state);

var _math_utils = require('../utils/math_utils');

var _list_view = require('../../list_view');

var _list_view2 = _interopRequireDefault(_list_view);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListViewState = function (_GameState) {
  _inherits(ListViewState, _GameState);

  function ListViewState() {
    _classCallCheck(this, ListViewState);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ListViewState).apply(this, arguments));
  }

  _createClass(ListViewState, [{
    key: 'preload',
    value: function preload() {
      this.game.load.crossOrigin = 'anonymous';
    }
  }, {
    key: 'shutdown',
    value: function shutdown() {
      this.listView.destroy();
    }
  }, {
    key: 'create',
    value: function create() {
      var maskW = 600;
      var maskH = 200;
      var boxW = maskW;
      var boxH = 50;

      this.listView = new _list_view2.default(this.game, this.world, new Phaser.Rectangle(this.world.centerX - maskW / 2, 120, maskW, 400), {
        direction: 'y'
      });

      for (var i = 0; i < 500; i++) {
        var color = Phaser.Color.getRandomColor();
        var group = this.game.make.group(null);
        var g = this.game.add.graphics(0, 0, group);
        var h = boxH + Math.floor(Math.random() * 100);
        g.beginFill(color).drawRect(0, 0, boxW, h);

        var txt = this.game.add.text(boxW / 2, h / 2, i, { font: '40px Arial', fill: '#000' }, group);
        txt.anchor.set(0.5);
        var img = this.game.add.image(0, 0, group.generateTexture());
        this.listView.add(img);
      }

      this.listView.moveToItem(3);
      _get(Object.getPrototypeOf(ListViewState.prototype), 'create', this).call(this);
    }
  }]);

  return ListViewState;
}(_game_state2.default);

exports.default = ListViewState;