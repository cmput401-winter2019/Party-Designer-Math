'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _list_view = require('./list_view');

var _list_view2 = _interopRequireDefault(_list_view);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultOptions = {
  direction: 'x',
  autocull: true,
  momentum: false,
  bouncing: true,
  snapping: true,
  overflow: 100,
  padding: 10,
  swipeEnabled: true,
  offset: {
    x: 100
  }
};

var SwipeCarousel = function (_ListView) {
  _inherits(SwipeCarousel, _ListView);

  function SwipeCarousel(game, parent, bounds) {
    var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

    _classCallCheck(this, SwipeCarousel);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SwipeCarousel).call(this, game, parent, bounds, Object.assign({}, defaultOptions, options)));

    _this.scroller.options.snapStep = bounds.width + _this.o.padding;
    return _this;
  }

  return SwipeCarousel;
}(_list_view2.default);

exports.default = SwipeCarousel;